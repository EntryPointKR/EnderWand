buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
    }
}

apply plugin: 'base'

allprojects {
    group 'kr.entree'
    version '1.0-SNAPSHOT'
}

subprojects {
    def kotlin = name.endsWith('-kotlin')
    if (kotlin) {
        apply plugin: 'org.jetbrains.kotlin.jvm'
    } else {
        apply plugin: 'java'
    }

    repositories {
        jcenter()
    }

    dependencies {
        if (kotlin) {
            implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
        } else {
            compileOnly 'org.projectlombok:lombok:1.18.10'
            compileOnly group: 'org.jetbrains', name: 'annotations', version: '18.0.0'
            annotationProcessor 'org.projectlombok:lombok:1.18.10'
        }
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
        testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    }

    test {
        useJUnitPlatform()
    }

    task makeSrcDirs {
        sourceSets {
            if (kotlin) {
                main.kotlin.srcDirs*.mkdirs()
                test.kotlin.srcDirs*.mkdirs()
            } else {
                main.java.srcDirs*.mkdirs()
                test.java.srcDirs*.mkdirs()
            }
            main.resources.srcDirs*.mkdirs()
            test.resources.srcDirs*.mkdirs()
        }
    }

    if (kotlin) {
        [compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = 1.8
    }
}